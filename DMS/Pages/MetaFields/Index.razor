@page "/meta"

@using DAS.ViewModels
@using DAS.Services
@using DAS.Models

@inject IAdminService adminService
@inject IListsService listsService
@inject IToastService toastService

<AuthorizeView Roles="Admin">
    <h3>Meta Fields</h3>
    <div class="row mb-3">
        <div class="col-12">
            <div class="card">
                <div class="card-body">
                    <EditForm Context="formMetaContext" Model="MetaFieldModel" OnValidSubmit="OnValidCreateSubmit">
                        <div class="form-inline">
                            <div class="form-group mb-2">
                                <label for="inputName" class="sr-only">Field Name</label>
                                <input @bind="MetaFieldModel.Name" class="form-control" id="inputName" placeholder="Field Name">
                            </div>
                            <div class="form-group mx-sm-3 mb-2">
                                <label for="inputFieldType" class="sr-only">Storage Type</label>
                                <select @bind="MetaFieldModel.FieldType" class="form-control" id="inputFieldType">
                                    <option value="@FieldType.Text">Text</option>
                                </select>
                            </div>
                            <div class="form-group mb-2">
                                <label for="inputTitle" class="sr-only">Title</label>
                                <input @bind="MetaFieldModel.Title" class="form-control" id="inputTitle" placeholder="Field Title">
                            </div>
                            <div class="form-group mx-sm-3 mb-2">
                                <label for="inputDefault" class="sr-only">Default Value</label>
                                <input @bind="MetaFieldModel.DefaultValue" class="form-control" id="inputDefault" placeholder="Default Value">
                            </div>
                            <button type="submit" class="btn btn-success mb-2">Add Meta Field</button>
                        </div>
                    </EditForm>

                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-12">
            <div class="card">
                <div class="card-body">
                    @if (MetaFields == null)
                    {
                        <p>Loading...</p>
                    }
                    else
                    {
                        <table class="table">
                            <thead class="thead-light">
                                <tr>
                                    <th>Field Title</th>
                                    <th>Group</th>
                                    <th>Name</th>
                                    <th>Type</th>
                                    <th></th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var mf in MetaFields)
                                {
                                    <tr>
                                        <td>@mf.Title</td>
                                        <td>@mf.Group</td>
                                        <td>@mf.Name</td>
                                        <td>@mf.FieldType.ToString()</td>
                                        <td>
                                            <a class="btn-sm btn-secondary mr-1" href="#"><i class="oi oi-pencil"></i></a>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    }
                </div>
            </div>
        </div>
    </div>
</AuthorizeView>

@code {
    public List<MetaField> MetaFields { get; set; }

    private MetaField MetaFieldModel { get; set; } = new MetaField();

    public async Task LoadMetaFields()
    {
        MetaFieldModel = new MetaField();
        MetaFields = (await listsService.GetMetaFieldsList()).ToList();
    }

    public async Task OnValidCreateSubmit()
    {

        try
        {
            var metaField = await adminService.AddMetaField(MetaFieldModel).ConfigureAwait(false);
            if (metaField != null)
            {
                toastService.ShowSuccess($"Field '{MetaFieldModel.Name}' created successfully");
            }
            else
            {
                toastService.ShowError($"Failed to create field '{MetaFieldModel.Name}'");
            }
        }
        catch (DAS.Exceptions.DasException ex)
        {
            toastService.ShowError($"Failed to create field '{MetaFieldModel.Name}'. {ex.Message}");
        }

        await LoadMetaFields();

    }

    protected override async Task OnInitializedAsync()
    {
        await LoadMetaFields();
    }
}
