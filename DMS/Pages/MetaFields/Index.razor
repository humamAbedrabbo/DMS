@page "/meta"
@attribute [Authorize(Roles = "Admin")]

@using DAS.ViewModels
@using DAS.Services
@using DAS.Models

@inject IAdminService adminService
@inject IListsService listsService
@inject IArchiveService arcService
@inject ICurrentUserService currentUserService
@inject IToastService toastService
@inject IJSRuntime JSRuntime

@if (currentUser != null)
{
    <div class="card text-left">
        <div class="jumbotron jumbotron-fluid">
            <div class="container-fluid">
                <h1 class="display-4">@LocalService.Get("Meta Fields", currentUser.Lang)</h1>
                <p class="lead">@LocalService.Get("Meta fields are additional attributes that can be attached to document, folder or repository", currentUser.Lang).</p>
                <hr />
                <p>@LocalService.Get("Meta field has hierarcial nature. It will be added to all childs in tree structure if it was added to a parent, but it will not be removed automatically", currentUser.Lang).</p>
                <button type="button" class="btn btn-lg btn-primary" data-toggle="modal" data-target="#dlg_AddMeta">
                    @LocalService.Get("Add Meta Fields", currentUser.Lang)
                </button>
            </div>
        </div>
        <nav>
            <div class="nav nav-tabs" id="nav-tab" role="tablist">
                <a class="nav-item nav-link active" id="nav-index-tab" data-toggle="tab" href="#nav-index" role="tab" aria-controls="nav-index" aria-selected="true">@LocalService.Get("Meta Field Index", currentUser.Lang)</a>
            </div>
        </nav>
        <div class="tab-content" id="nav-tabContent">
            <div class="tab-pane fade show active" id="nav-index" role="tabpanel" aria-labelledby="nav-index-tab">
                <div class="card">
                    <div class="card-body">
                        @if (MetaFields == null)
                        {
                            <p> @LocalService.Get("Loading", currentUser.Lang)...</p>
                        }
                        else
                        {
                            <table class="table table-bordered">
                                <thead class="thead-light">
                                    <tr>
                                        <th> @LocalService.Get("Field Title", currentUser.Lang)</th>
                                        <th> @LocalService.Get("Group", currentUser.Lang)</th>
                                        <th> @LocalService.Get("Field Name", currentUser.Lang)</th>
                                        <th> @LocalService.Get("Field Type", currentUser.Lang)</th>
                                        <th></th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var mf in MetaFields)
                                    {
                                        <tr>
                                            <td>@mf.Title</td>
                                            <td>@mf.Group</td>
                                            <td>@mf.Name</td>
                                            <td>@mf.FieldType.ToString()</td>
                                            <td>
                                                <a class="btn-sm btn-secondary mr-1" href="#" @onclick="@(e => OnEditMeta(e, mf.Id))" data-toggle="modal" data-target="#dlg_EditMeta"><i class="oi oi-pencil"></i></a>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Modal -->
    <div class="modal fade" id="dlg_EditMeta" tabindex="-1" role="dialog" aria-labelledby="dlg_EditMetaLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <EditForm Model="EditMetaModel" OnValidSubmit="OnValidSubmitEditMeta">
                    <DataAnnotationsValidator />

                    <div class="modal-header bg-primary">
                        <h5 class="modal-title" id="dlg_EditMetaLabel">@LocalService.Get("Edit Meta Field", currentUser.Lang)</h5>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <div class="modal-body">
                        <div class="form-group">
                            <label for="id_fld_type">@LocalService.Get("Field Type", currentUser.Lang)</label>
                            <InputSelect @bind-Value="EditMetaModel.FieldType" id="id_fld_type" class="form-control">
                                <option value="@FieldType.Text">@FieldType.Text.ToString()</option>
                                <option value="@FieldType.LargeText">@FieldType.LargeText.ToString()</option>
                                <option value="@FieldType.Date">@FieldType.Date.ToString()</option>
                                <option value="@FieldType.Number">@FieldType.Number.ToString()</option>
                                <option value="@FieldType.List">@FieldType.List.ToString()</option>
                            </InputSelect>
                            <ValidationMessage For="@(() => EditMetaModel.FieldType)" />
                        </div>
                        <div class="form-group">
                            <label for="id_fld_group">@LocalService.Get("Group", currentUser.Lang)</label>
                            <input readonly id="id_fld_group" class="form-control" value="@EditMetaModel.Group" />
                        </div>
                        <div class="form-group">
                            <label for="id_fld_name">@LocalService.Get("Field Name", currentUser.Lang)</label>
                            <InputText @bind-Value="EditMetaModel.Name" id="id_fld_name" class="form-control"></InputText>
                            <ValidationMessage For="@(() => EditMetaModel.Name)" />
                        </div>
                        <div class="form-group">
                            <label for="id_fld_title">@LocalService.Get("Field Title", currentUser.Lang)</label>
                            <InputText @bind-Value="EditMetaModel.Title" id="id_fld_title" class="form-control"></InputText>
                            <ValidationMessage For="@(() => EditMetaModel.Title)" />
                        </div>

                        @if (EditMetaModel.FieldType == FieldType.List)
                        {
                        <div class="form-group">
                            <label for="id_fld_list">@LocalService.Get("List", currentUser.Lang)</label>
                            <InputText @bind-Value="EditMetaModel.ListSource" id="id_fld_list" class="form-control"></InputText>
                            <input @bind-value="@EditMetaModel.ListSource" id="id_fld_list" class="form-control" />
                            <ValidationMessage For="@(() => EditMetaModel.ListSource)" />
                        </div>
                        }
                        <div class="form-group">
                            <label for="id_fld_default">@LocalService.Get("Default Value", currentUser.Lang)</label>
                            @if (EditMetaModel.FieldTag == "textarea")
                            {
                                <InputTextArea id="id_fld_default" @bind-Value="EditMetaModel.DefaultValue" rows="3" class="form-control"></InputTextArea>
                            }
                            else if (MetaFieldModel.FieldTag == "select")
                            {
                                <select id="id_fld_default" @bind="EditMetaModel.DefaultValue" class="form-control">@((MarkupString)EditMetaModel.FieldTagInputSelectItems)</select>
                            }
                            else
                            {
                                if (MetaFieldModel.FieldFormat != null)
                                {
                                    <input id="id_fld_default" type="@EditMetaModel.FieldTagInputType" format-value="@EditMetaModel.FieldFormat" @bind="EditMetaModel.DefaultValue" class="form-control" />
                                }
                                else
                                {
                                    <input id="id_fld_default" type="@EditMetaModel.FieldTagInputType" @bind="EditMetaModel.DefaultValue" class="form-control" />
                                }
                            }
                            <ValidationMessage For="@(() => EditMetaModel.DefaultValue)" />
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-dismiss="modal">@LocalService.Get("Close", currentUser.Lang)</button>
                        <button type="submit" class="btn btn-primary">@LocalService.Get("Save", currentUser.Lang)</button>
                    </div>
                </EditForm>

            </div>
        </div>
    </div>

    <!-- Modal -->
    <div class="modal fade" id="dlg_AddMeta" tabindex="-1" role="dialog" aria-labelledby="dlg_AddMetaLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <EditForm Model="MetaFieldModel" OnValidSubmit="OnValidCreateSubmit">
                    <DataAnnotationsValidator />

                    <div class="modal-header bg-primary">
                        <h5 class="modal-title" id="dlg_AddMetaLabel">@LocalService.Get("Add Meta Field", currentUser.Lang)</h5>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <div class="modal-body">
                        <div class="form-group">
                            <label for="inputFieldType">@LocalService.Get("Field Type", currentUser.Lang)</label>
                            <select @bind="MetaFieldModel.FieldType" class="form-control" id="inputFieldType">
                                <option value="@FieldType.Text">@FieldType.Text.ToString()</option>
                                <option value="@FieldType.LargeText">@FieldType.LargeText.ToString()</option>
                                <option value="@FieldType.Date">@FieldType.Date.ToString()</option>
                                <option value="@FieldType.Number">@FieldType.Number.ToString()</option>
                                <option value="@FieldType.List">@FieldType.List.ToString()</option>
                            </select>
                            <ValidationMessage For="@(() => EditMetaModel.FieldType)" />
                        </div>
                        <div class="form-group">
                            <label for="inputName"> @LocalService.Get("Field Name", currentUser.Lang)</label>
                            <input @bind="MetaFieldModel.Name" class="form-control" id="inputName" placeholder="@LocalService.Get("Field Name", currentUser.Lang)">
                            <ValidationMessage For="@(() => MetaFieldModel.Name)" />
                        </div>
                        <div class="form-group">
                            <label for="inputTitle">@LocalService.Get("Title", currentUser.Lang)</label>
                            <input @bind="MetaFieldModel.Title" class="form-control" id="inputTitle" placeholder="@LocalService.Get("Title", currentUser.Lang)">
                            <ValidationMessage For="@(() => MetaFieldModel.Title)" />
                        </div>

                        @if (MetaFieldModel.FieldType == FieldType.List)
                        {
                            <div class="form-group">
                                <label for="inputListSource">@LocalService.Get("List", currentUser.Lang)</label>
                                <input @bind="MetaFieldModel.ListSource" class="form-control" id="inputListSource" placeholder="@LocalService.Get("List", currentUser.Lang)">
                                <ValidationMessage For="@(() => MetaFieldModel.ListSource)" />
                            </div>

                        }
                    <div class="form-group">
                        <label for="inputDefault">@LocalService.Get("Default Value", currentUser.Lang)</label>

                        @if (MetaFieldModel.FieldTag == "textarea")
                        {
                            <InputTextArea id="id_fld_default" @bind-Value="MetaFieldModel.DefaultValue" rows="3" class="form-control"></InputTextArea>
                        }
                        else if (MetaFieldModel.FieldTag == "select")
                        {
                            <select id="inputDefault" @bind="MetaFieldModel.DefaultValue" class="form-control">@((MarkupString)MetaFieldModel.FieldTagInputSelectItems)</select>
                        }
                        else
                        {
                            if (MetaFieldModel.FieldFormat != null)
                            {
                                <input id="inputDefault" type="@MetaFieldModel.FieldTagInputType" format-value="@MetaFieldModel.FieldFormat" @bind="MetaFieldModel.DefaultValue" class="form-control" />
                            }
                            else
                            {
                                <input id="inputDefault" type="@MetaFieldModel.FieldTagInputType" @bind="MetaFieldModel.DefaultValue" class="form-control" />
                            }
                        }

                        <ValidationMessage For="@(() => MetaFieldModel.DefaultValue)" />
                    </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-dismiss="modal">@LocalService.Get("Close", currentUser.Lang)</button>
                        <button type="submit" class="btn btn-success mb-2">@LocalService.Get("Add Meta Field", currentUser.Lang)</button>
                    </div>
                </EditForm>

            </div>
        </div>
    </div>
}


@code {
    public List<MetaField> MetaFields { get; set; }

    private MetaField MetaFieldModel { get; set; } = new MetaField();

    private MetaField EditMetaModel { get; set; } = new MetaField();

    private AppUser currentUser;

    public async Task LoadMetaFields()
    {
        MetaFieldModel = new MetaField();
        MetaFields = (await listsService.GetMetaFieldsList()).ToList();
    }

    public void OnEditMeta(MouseEventArgs e, int id)
    {
        EditMetaModel = MetaFields.FirstOrDefault(x => x.Id == id);
    }

    public async Task OnValidSubmitEditMeta()
    {
        try
        {
            await adminService.UpdateMetaField(EditMetaModel.Id, EditMetaModel);
            toastService.ShowSuccess($"Meta Field '{EditMetaModel.Title}' updated successfully");
            EditMetaModel = new MetaField();
        }
        catch
        {
            toastService.ShowError($"Failed to update meta field '{EditMetaModel.Title}'");
        }

        // $('#myModal').modal('show')
        await JSRuntime.InvokeVoidAsync("closeDialog", "#dlg_EditMeta");
    }

    public async Task OnValidCreateSubmit()
    {

        try
        {
            var metaField = await adminService.AddMetaField(MetaFieldModel).ConfigureAwait(false);
            if (metaField != null)
            {
                await JSRuntime.InvokeVoidAsync("closeDialog", "#dlg_AddMeta");
                toastService.ShowSuccess($"Field '{MetaFieldModel.Name}' created successfully");
                MetaFieldModel = new MetaField();
            }
            else
            {
                toastService.ShowError($"Failed to create field '{MetaFieldModel.Name}'");
            }
        }
        catch (DAS.Exceptions.DasException ex)
        {
            toastService.ShowError($"Failed to create field '{MetaFieldModel.Name}'. {ex.Message}");
        }

        await LoadMetaFields();

    }

    protected override async Task OnInitializedAsync()
    {
        currentUser = await currentUserService.GetCurrentUserAsync();
        await LoadMetaFields();
    }
}
