@page "/repos"
@attribute [Authorize(Roles = "Admin, Archive")]

@using DAS.ViewModels
@using DAS.Services
@using DAS.Models

@inject IAdminService adminService
@inject IListsService listsService
@inject ICurrentUserService currentUserService
@inject IToastService toastService

<h3>Repositories</h3>
<AuthorizeView Roles="Admin">
    <div class="row mb-3">
        <div class="col-12">
            <div class="card">
                <div class="card-body">
                    <EditForm Context="RepoAddModelForm" Model="RepoAddModel" OnValidSubmit="OnValidSubmitRepository">
                        <DataAnnotationsValidator />
                        <div class="form-inline">
                            <div class="form-group mb-2">
                                <label for="id_name" class="sr-only">Repository Name</label>
                                @*<input @bind="RepositoryModel.Name" class="form-control" id="inputName" placeholder="Repository Name">*@
                                <InputText @bind-Value="RepoAddModel.Name" class="form-control" id="id_name" placeholder="Name"></InputText>
                                <ValidationMessage For="@(() => RepoAddModel.Name)"></ValidationMessage>
                            </div>
                            <div class="form-group mx-sm-3 mb-2">
                                <label for="id_desc" class="sr-only">Description</label>
                                <InputText @bind-Value="RepoAddModel.Description" class="form-control" id="id_desc" placeholder="Description"></InputText>
                                <ValidationMessage For="@(() => RepoAddModel.Description)"></ValidationMessage>
                            </div>

                            <div class="form-group mx-sm-3 mb-2">
                                <label for="id_storage" class="sr-only">Storage</label>
                                <InputSelect @bind-Value="RepoAddModel.Storage" class="form-control" id="id_storage">
                                    <option value="@StorageType.Database">Database</option>
                                    <option value="@StorageType.Directory">Directory</option>
                                </InputSelect>
                            </div>

                            <button type="submit" class="btn btn-success mb-2">Add Repository</button>
                        </div>
                    </EditForm>

                </div>
            </div>
        </div>
    </div>

</AuthorizeView>
<div class="row">
    <div class="col-12">
        <div class="card">
            <div class="card-body">
                @if (Repositories == null)
                {
                    <p>Loading...</p>
                }
                else
                {
                    <table class="table">
                        <thead class="thead-light">
                            <tr>
                                <th>Repository Name</th>
                                <th>Title</th>
                                <th>Storage</th>
                                <th></th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var repo in Repositories)
                            {
                                <tr>
                                    <td>@repo.Name</td>
                                    <td>@repo.Title</td>
                                    <td>@repo.Storage.ToString()</td>
                                    <td>
                                        <AuthorizeView Roles="Admin">
                                            <a class="btn-sm btn-secondary mr-1" href="repo/edit/@repo.Id"><i class="oi oi-pencil"></i></a>
                                        </AuthorizeView>
                                        <a class="btn-sm btn-secondary mr-1" href="repo/@repo.Id"><i class="oi oi-list-rich"></i></a>
                                        <a class="btn-sm btn-secondary mr-1" href="docs/upload/@repo.Id"><i class="oi oi-cloud-upload"></i></a>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                }
            </div>
        </div>
    </div>
</div>

@code {

    public IEnumerable<RepoDetailModel> Repositories { get; set; }
    public RepoAddModel RepoAddModel { get; set; } = new RepoAddModel();
    private AppUser currentUser;

    public async Task LoadRepositories()
    {
        currentUser = await currentUserService.GetCurrentUserAsync();
        Repositories = await listsService.GetRepositoryList();
    }

    public async Task OnValidSubmitRepository()
    {

        try
        {
            RepoAddModel.UserName = currentUser.UserName;
            var repo = await adminService.AddRepository(RepoAddModel).ConfigureAwait(false);
            if (repo != null)
            {
                toastService.ShowSuccess($"Repository '{RepoAddModel.Name}' created successfully");
            }
            else
            {
                toastService.ShowError($"Failed to create repository '{RepoAddModel.Name}'");
            }
        }
        catch (DAS.Exceptions.DasException ex)
        {
            toastService.ShowError($"Failed to create repository '{RepoAddModel.Name}'. {ex.Message}");
        }

        await LoadRepositories();

    }

    protected override async Task OnInitializedAsync()
    {
        await LoadRepositories();
    }
}
