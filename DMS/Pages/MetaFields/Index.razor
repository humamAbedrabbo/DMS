@page "/meta"
@attribute [Authorize(Roles = "Admin")]

@using DAS.ViewModels
@using DAS.Services
@using DAS.Models

@inject IAdminService adminService
@inject IListsService listsService
@inject IArchiveService arcService
@inject ICurrentUserService currentUserService
@inject IToastService toastService
@inject IJSRuntime JSRuntime;

<AuthorizeView Roles="Admin">
    <h3>Meta Fields</h3>
    <div class="row mb-3">
        <div class="col-12">
            <div class="card">
                <div class="card-body">
                    <EditForm Context="formMetaContext" Model="MetaFieldModel" OnValidSubmit="OnValidCreateSubmit">
                        <div class="form-inline">
                            <div class="form-group mb-2">
                                <label for="inputName" class="sr-only">Field Name</label>
                                <input @bind="MetaFieldModel.Name" class="form-control" id="inputName" placeholder="Field Name">
                            </div>
                            <div class="form-group mx-sm-3 mb-2">
                                <label for="inputFieldType" class="sr-only">Storage Type</label>
                                <select @bind="MetaFieldModel.FieldType" class="form-control" id="inputFieldType">
                                    <option value="@FieldType.Text">@FieldType.Text.ToString()</option>
                                    <option value="@FieldType.LargeText">@FieldType.LargeText.ToString()</option>
                                    <option value="@FieldType.Boolean">@FieldType.Boolean.ToString()</option>
                                    <option value="@FieldType.Date">@FieldType.Date.ToString()</option>
                                    <option value="@FieldType.DateTime">@FieldType.DateTime.ToString()</option>
                                    <option value="@FieldType.Number">@FieldType.Number.ToString()</option>
                                    <option value="@FieldType.List">@FieldType.List.ToString()</option>
                                </select>
                            </div>
                            <div class="form-group mb-2">
                                <label for="inputTitle" class="sr-only">Title</label>
                                <input @bind="MetaFieldModel.Title" class="form-control" id="inputTitle" placeholder="Field Title">
                            </div>
                            <div class="form-group mx-sm-3 mb-2">
                                <label for="inputDefault" class="sr-only">Default Value</label>
                                <input @bind="MetaFieldModel.DefaultValue" class="form-control" id="inputDefault" placeholder="Default Value">
                            </div>
                            <button type="submit" class="btn btn-success mb-2">Add Meta Field</button>
                        </div>
                    </EditForm>

                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-12">
            <div class="card">
                <div class="card-body">
                    @if (MetaFields == null)
                    {
                        <p>Loading...</p>
                    }
                    else
                    {
                        <table class="table">
                            <thead class="thead-light">
                                <tr>
                                    <th>Field Title</th>
                                    <th>Group</th>
                                    <th>Name</th>
                                    <th>Type</th>
                                    <th></th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var mf in MetaFields)
                                {
                                    <tr>
                                        <td>@mf.Title</td>
                                        <td>@mf.Group</td>
                                        <td>@mf.Name</td>
                                        <td>@mf.FieldType.ToString()</td>
                                        <td>
                                            <a class="btn-sm btn-secondary mr-1" href="#" @onclick="@(e => OnEditMeta(e, mf.Id))" data-toggle="modal" data-target="#id_EditMeta"><i class="oi oi-pencil"></i></a>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    }
                </div>
            </div>
        </div>
    </div>
</AuthorizeView>

<!-- Modal -->
<div class="modal fade" id="id_EditMeta" tabindex="-1" role="dialog" aria-labelledby="label_EditMeta" aria-hidden="true">
    <div class="modal-dialog" role="document">

        <div class="modal-content">
            <EditForm Model="EditMetaModel" OnValidSubmit="OnValidSubmitEditMeta">
                <div class="modal-header">
                    <h5 class="modal-title" id="label_EditMeta">Edit Meta Field</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <div class="form-group">
                        <label for="id_fld_group">Group</label>
                        <input readonly id="id_fld_group" class="form-control" value="@EditMetaModel.Group" />
                    </div>
                    <div class="form-group">
                        <label for="id_fld_name">Name</label>
                        <InputText @bind-Value="EditMetaModel.Name" id="id_fld_name" class="form-control"></InputText>
                    </div>
                    <div class="form-group">
                        <label for="id_fld_title">Title</label>
                        <InputText @bind-Value="EditMetaModel.Title" id="id_fld_title" class="form-control"></InputText>
                    </div>
                    <div class="form-group">
                        <label for="id_fld_type">Type</label>
                        <InputSelect @bind-Value="EditMetaModel.FieldType" id="id_fld_type" class="form-control">
                            <option value="@FieldType.Text">@FieldType.Text.ToString()</option>
                            <option value="@FieldType.LargeText">@FieldType.LargeText.ToString()</option>
                            <option value="@FieldType.Boolean">@FieldType.Boolean.ToString()</option>
                            <option value="@FieldType.Date">@FieldType.Date.ToString()</option>
                            <option value="@FieldType.DateTime">@FieldType.DateTime.ToString()</option>
                            <option value="@FieldType.Number">@FieldType.Number.ToString()</option>
                            <option value="@FieldType.List">@FieldType.List.ToString()</option>
                        </InputSelect>
                    </div>
                    <div class="form-group">
                        <label for="id_fld_list">List</label>
                        <InputText @bind-Value="EditMetaModel.ListSource" id="id_fld_list" class="form-control"></InputText>
                    </div>
                    <div class="form-group">
                        <label for="id_fld_default">Default Value</label>
                        <InputText @bind-Value="EditMetaModel.DefaultValue" id="id_fld_default" class="form-control"></InputText>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                    <button type="submit" class="btn btn-primary">Save</button>
                </div>
            </EditForm>

        </div>
    </div>
</div>

@code {
    public List<MetaField> MetaFields { get; set; }

    private MetaField MetaFieldModel { get; set; } = new MetaField();

    private MetaField EditMetaModel { get; set; } = new MetaField();

    public async Task LoadMetaFields()
    {
        MetaFieldModel = new MetaField();
        MetaFields = (await listsService.GetMetaFieldsList()).ToList();
    }

    public void OnEditMeta(MouseEventArgs e, int id)
    {
        EditMetaModel = MetaFields.FirstOrDefault(x => x.Id == id);
    }

    public async Task OnValidSubmitEditMeta()
    {
        try
        {
            await adminService.UpdateMetaField(EditMetaModel.Id, EditMetaModel);
            toastService.ShowSuccess($"Meta Field '{EditMetaModel.Title}' updated successfully");
        }
        catch
        {
            toastService.ShowError($"Failed to update meta field '{EditMetaModel.Title}'");
        }

        // $('#myModal').modal('show')
        await JSRuntime.InvokeVoidAsync("closeDialog", "#id_EditMeta");
    }

    public async Task OnValidCreateSubmit()
    {

        try
        {
            var metaField = await adminService.AddMetaField(MetaFieldModel).ConfigureAwait(false);
            if (metaField != null)
            {
                toastService.ShowSuccess($"Field '{MetaFieldModel.Name}' created successfully");
            }
            else
            {
                toastService.ShowError($"Failed to create field '{MetaFieldModel.Name}'");
            }
        }
        catch (DAS.Exceptions.DasException ex)
        {
            toastService.ShowError($"Failed to create field '{MetaFieldModel.Name}'. {ex.Message}");
        }

        await LoadMetaFields();

    }

    protected override async Task OnInitializedAsync()
    {
        await LoadMetaFields();
    }
}
