@page "/repo/details/{id:int}"

@using MW.Blazor
@using DMS.Models
@using DMS.Services

@inject IAdminService adminService

<h3>Repository: @Repository?.Name</h3>
<div class="row d-flex flex-grow-1">
    <div class="col-4 d-flex flex-column flex-grow-1">
        <div class="d-flex flex-grow-1 flex-column">
            <div class="card d-flex flex-grow-1 flex-column">
                <div class="card-body">
                    <Tree Nodes="@Folders" ChildSelector="@(item => item.Childs)" @bind-SelectedNode="selectedNode" @bind-ExpandedNodes="ExpandedNodes" HasChildNodes="@(item => item.Childs?.Any() == true)">
                        <TitleTemplate>@context.Name</TitleTemplate>
                    </Tree>
                    <p style="margin-top: 2rem">
                        Selected: @selectedNode?.Name<br />
                        @*Expanded: @string.Join(", ", ExpandedNodes.Select(i => i.Name))<br />*@
                    </p>
                </div>
            </div>
        </div>

    </div>
    <div class="col-8">
        @if(selectedNode != null)
        {
        <div class="card">
            <div class="card-body">
                <h5 class="card-title">@selectedNode.Name</h5>
                <h6 class="card-subtitle mb-2 text-muted">@selectedNode.Description</h6>
            </div>
            <ul class="list-group list-group-flush">
                <li class="list-group-item">Cras justo odio</li>
                <li class="list-group-item">Dapibus ac facilisis in</li>
                <li class="list-group-item">Vestibulum at eros</li>
            </ul>
            <div class="card-body">
                <a href="#" class="btn btn-primary mr-1">Edit</a>
                <a href="#" class="btn btn-primary mr-1">Add Child Folder</a>
            </div>
        </div>
        }
        
    </div>
</div>


@code {

    [Parameter]
    public int Id { get; set; }

    public Repository Repository { get; set; }

    public Folder ChildFolder { get; set; } = new Folder();

    IEnumerable<Folder> Folders;

    IList<Folder> ExpandedNodes = new List<Folder>();


    private Folder selectedNode;

    protected override void OnInitialized()
    {
        ExpandedNodes.Add(Folders?.Skip(1).First());
        ExpandedNodes.Add(Folders?.Skip(1).Take(1).First().Childs.Skip(1).First());
    }

    protected override async Task OnInitializedAsync()
    {
        
        Repository = await adminService.GetRepositoryByIdWithFolderTreeAsync(1).ConfigureAwait(false);
        Folders = Repository.Folders;
        
        
    }

    public void OnUpdateFolder()
    {

    }

}
